{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-ab01756d687f2a6a4114.js","mappings":"+HAiCA,IAxBqBA,IACnB,MAAM,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAiB,KACnCC,MAAOC,GAAeL,EAe9B,OAbAM,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAU,EAEd,MAAMC,EAAWC,aAAY,KACvBF,GAAUF,aAAU,EAAVA,EAAYK,UAExBH,IACAL,GAAS,KAASG,aAAU,EAAVA,EAAYM,UAAU,EAAGJ,IAAQ,MACrD,GACC,IACH,MAAO,IAAMK,cAAcJ,EAAS,GACnC,IAGDK,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAGC,MAAO,CAAEC,SAAU,QAASC,WAAY,cAAgBf,GACvD,C,8JCRV,MAbagB,IAAA,IAAC,SAAEC,GAAqBD,EAAA,OACnCE,EAAAA,EAAAA,IAAA,WACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAU,OAASL,GAAI,EAAGM,EAAG,CAAEC,QAAQ,mBAC7CA,QAAQ,mBAGTV,EACO,E,sECdZ,SAASW,EAAkB7B,GACzB,MAAM,KAAC8B,GAAQC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBjC,EAAMkC,YAE7D,OADKJ,GAoBP,SAA8BK,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAtBaG,CAAqB,QAAQ,GACjCzB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBiB,EAAM,CACzEZ,SAAS,MACTE,GAAI,CACFL,SAAU,CAAC,EAAG,EAAG,GACjBwB,WAAW,OACXC,MAAM,aAEN,KAAM3B,EAAAA,cAAoB4B,EAAAA,EAAa,CACzCrC,MAAM,iFAKV,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO0C,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBjC,EAAMkC,YAC3E,OAAOS,EAAY9B,EAAAA,cAAoB8B,EAAW3C,EAAOa,EAAAA,cAAoBgB,EAAmB7B,IAAU6B,EAAkB7B,EAC9H,ECrBA,SAAS6B,EAAkB7B,GACzB,MAAM4C,EAAcb,OAAOC,OAAO,CAChCV,GAAI,KACJG,GAAI,KACJE,EAAG,MACFM,EAAAA,EAAAA,MAAsBjC,EAAMkC,aAAa,MAACW,GAASD,EAEtD,OADKC,GAYP,SAA8BV,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAdcG,CAAqB,SAAS,GACnCzB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBgC,EAAO,CAC1EC,KAAM,aACJ,KAAMjC,EAAAA,cAAoB+B,EAAYtB,GAAI,KAAM,KAAMT,EAAAA,cAAoB+B,EAAYnB,GAAI,KAAMZ,EAAAA,cAAoB+B,EAAYjB,EAAG,CACrIoB,KAAM,yCACL,uDAAwD,MAC7D,CAKA,MAJA,SAAoB/C,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAO0C,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBjC,EAAMkC,YAC3E,OAAOS,EAAY9B,EAAAA,cAAoB8B,EAAW3C,EAAOa,EAAAA,cAAoBgB,EAAmB7B,IAAU6B,EAAkB7B,EAC9H,ECgCA,MArBiBiB,IAAiC,IAAhC,MAAE+B,GAAwB/B,EAC1C,MAAM,SAAEgC,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,MACzB,UAAEC,IAAcC,EAAAA,EAAAA,KAEtB,OACElC,EAAAA,EAAAA,IAACmC,EAAAA,EAAM,MACLnC,EAAAA,EAAAA,IAAA,MAAIC,GAAImC,EAAAA,GAAiBH,IACzBjC,EAAAA,EAAAA,IAAA,WAASC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAImC,EAAG,CAAEzC,SAAU,CAAC,EAAG,EAAG,GAAI0C,GAAI,GAAK7B,QAAQ,kBACvET,EAAAA,EAAAA,IAACuC,EAAI,QAEPvC,EAAAA,EAAAA,IAAC0B,EAAAA,EAAK,CAACC,KAAK,iBACV3B,EAAAA,EAAAA,IAACwC,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,GAAe,IAAIZ,EAAQ,IAAIC,IAAa,oBAExD/B,EAAAA,EAAAA,IAAC2C,EAAAA,EAAO,CAACd,MAAOA,EAAOe,UAAU,KACjC5C,EAAAA,EAAAA,IAAC6C,EAAI,MACH7C,EAAAA,EAAAA,IAAC8C,EAAM,OAEF,EAMN,MAAMC,EAAeA,KAAM/C,EAAAA,EAAAA,IAACgD,EAAAA,EAAG,MClDtC,MCQe,SAAgClD,GAAuB,OAAjBjB,GAAciB,EACjE,MACEmD,MAAM,QAAEC,IACNrE,EAEJ,OAAOa,EAAAA,cAACyD,EAAQvC,OAAAC,OAAA,CAACgB,MAAOqB,EAAQE,OAAWvE,GAC7C,C,6ECcA,IAjBiBiB,IAA0B,IAAzB,KAAEuD,GAAiBvD,EACnC,MAAM,SAAEwD,EAAQ,SAAExB,IAAaE,EAAAA,EAAAA,KAE/B,OACEhC,EAAAA,EAAAA,IAACN,EAAAA,SAAc,KACZ2D,EAAKE,KAAI,CAACC,EAAKC,KACdzD,EAAAA,EAAAA,IAACN,EAAAA,SAAc,CAACgE,IAAKF,EAAIG,QACpBF,GAAC,MACJzD,EAAAA,EAAAA,IAACwC,EAAAA,KAAI,CAACvC,GAAK2D,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUrD,EAAG,EAAGiC,IAAIC,EAAAA,EAAAA,GAAe,IAAIZ,EAAQ,IAAIwB,EAAQ,IAAIE,EAAIG,OACvFH,EAAIO,SAII,C,4GCYrB,MAjBqBjE,IAAA,IAAC,KAAEkE,EAAI,SAAEpB,GAAW,GAAyB9C,EAAA,OAChEE,EAAAA,EAAAA,IAACiE,EAAAA,GAAG,CAAC/D,GAAI,IACPF,EAAAA,EAAAA,IAACwC,EAAAA,KAAI,CAACC,GAAIuB,EAAKL,KAAM1D,GAAK2D,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUrD,EAAGZ,SAAU,CAAC,EAAG,EAAG,GAAIyB,MAAM,OAAS,GACpF2C,EAAKE,QAERlE,EAAAA,EAAAA,IAAA,KAAGC,GAAI,CAAEoB,MAAM,YAAciB,GAAI,EAAG9B,EAAG,CAAEa,MAAM,aAAgBzB,SAAU,CAAC,EAAG,EAAG,MAC9EI,EAAAA,EAAAA,IAAA,YAAOgE,EAAKG,MACXH,EAAKX,MAAQT,IACZ5C,EAAAA,EAAAA,IAACN,EAAAA,SAAc,YAEbM,EAAAA,EAAAA,IAACoE,EAAAA,EAAQ,CAACf,KAAMW,EAAKX,SAIvB,ECPR,MARgBvD,IAAA,IAAC,MAAE+B,EAAK,UAAEwC,EAAS,GAAK,SAAEzB,GAAW,GAAoB9C,EAAA,OACvEE,EAAAA,EAAAA,IAAA,WAASC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,IAAMmE,UAAWA,GACxCxC,EAAM0B,KAAKS,IACVhE,EAAAA,EAAAA,IAACsE,EAAY,CAACZ,IAAKM,EAAKL,KAAMK,KAAMA,EAAMpB,SAAUA,MAE9C,C,yDC0CZ,IAvDY9C,IAOK,IAPJ,MACXoE,EAAK,GAAK,YACVK,EAAW,GAAK,SAChBC,EAAQ,GAAK,MACbC,EAAK,GAAK,SACV1E,EAAW,KAAI,aACf2E,EAAY,IACH5E,EACT,MAAM6E,GAAOzC,EAAAA,EAAAA,MAEP,UACJD,EACA2C,aAAcC,EAAY,QAC1BC,EACAC,gBAAiBC,EACjBC,UAAWC,EAAY,OACvBC,EAAM,aACNC,GACET,EAEEU,EAAM,CACVnB,MAAOA,EAAWA,EAAK,MAAMjC,EAAc4C,EAC3CN,YAAaA,GAAeS,EAC5BM,IAAI,GAAIR,GAAUN,GAAQ,IAC1BC,MAAM,GAAIK,GAAUL,GAASS,IAE/B,OACExF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAM6F,KAAMH,IACZ1F,EAAAA,cAAA,aAAQ2F,EAAInB,OACZxE,EAAAA,cAAA,QAAMqE,KAAK,cAAcyB,QAASH,EAAId,cACtC7E,EAAAA,cAAA,QAAMqE,KAAK,QAAQyB,QAASH,EAAIZ,QAChC/E,EAAAA,cAAA,QAAM+F,SAAS,WAAWD,QAASH,EAAInB,QACvCxE,EAAAA,cAAA,QAAM+F,SAAS,SAASD,QAASH,EAAIC,MACrC5F,EAAAA,cAAA,QAAM+F,SAAS,iBAAiBD,QAASH,EAAId,cAC7C7E,EAAAA,cAAA,QAAM+F,SAAS,WAAWD,QAASH,EAAIZ,QACvC/E,EAAAA,cAAA,QAAM+F,SAAS,UAAUD,QAAQ,YACjC9F,EAAAA,cAAA,QAAM+F,SAAS,eAAeD,QAASH,EAAId,cAC3C7E,EAAAA,cAAA,QAAMqE,KAAK,eAAeyB,QAAQ,wBAClC9F,EAAAA,cAAA,QAAMqE,KAAK,gBAAgByB,QAASH,EAAInB,QACxCxE,EAAAA,cAAA,QAAMqE,KAAK,cAAcyB,QAASH,EAAIC,MACtC5F,EAAAA,cAAA,QAAMqE,KAAK,sBAAsByB,QAASH,EAAId,cAC9C7E,EAAAA,cAAA,QAAMqE,KAAK,gBAAgByB,QAASH,EAAIZ,QACxC/E,EAAAA,cAAA,QAAMqE,KAAK,oBAAoByB,QAASH,EAAId,cAC5C7E,EAAAA,cAAA,QAAMqE,KAAK,kBAAkByB,QAASL,IACtCzF,EAAAA,cAAA,QAAMqE,KAAK,eAAeyB,QAAQ,wCAClC9F,EAAAA,cAAA,QAAMgG,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQhE,MAAMiE,EAAAA,EAAAA,YAAW,wBACjEnG,EAAAA,cAAA,QAAMgG,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQhE,MAAMiE,EAAAA,EAAAA,YAAW,wBACjEnG,EAAAA,cAAA,QAAMgG,IAAI,mBAAmBE,MAAM,UAAUhE,MAAMiE,EAAAA,EAAAA,YAAW,2BAC7DnB,EAAehF,EAAAA,cAAA,QAAMgG,IAAI,YAAY9D,KAAM8C,IAAmB,KAC9D3E,EACA,C","sources":["webpack://minimal-blog/./content/common/component.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// const fullString: string = `\n// Hi there!\n// I'm Nizar Hmain, a software engineer\n// currently based in Copenhagen (DK)\n// `;\n//\n//\nconst MyComponent = (props: { input: string }) => {\n  const [stuff, setStuff] = useState<string>(\"\");\n  const { input: fullString } = props;\n\n  useEffect(() => {\n    let counter = 0;\n\n    const interval = setInterval(() => {\n      if (counter < fullString?.length) {\n        // type more stuff\n        counter++;\n        setStuff(() => `${fullString?.substring(0, counter)}_`);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <p style={{ fontSize: \"1.5em\", fontFamily: \"monospace\" }}>{stuff}</p>\n    </div>\n  );\n};\n\nexport default MyComponent;\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport MyComponent from '../../../../content/common/component.tsx';\nfunction _createMdxContent(props) {\n  const {Text} = Object.assign({}, _provideComponents(), props.components);\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Hi.`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(MyComponent, {\n    input: `\nI'm Nizar Hmain, a software engineer\ncurrently based in Copenhagen ðŸ‡©ðŸ‡°\n`\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Projects\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/nizarhmain/covdash\"\n  }, \"Interactive covid map of Italy with real data ðŸ‡®ðŸ‡¹\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["props","stuff","setStuff","useState","input","fullString","useEffect","counter","interval","setInterval","length","substring","clearInterval","React","style","fontSize","fontFamily","_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","Text","Object","assign","_provideComponents","components","id","component","Error","_missingMdxReference","fontWeight","color","MyComponent","wrapper","MDXLayout","_components","Title","text","href","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}