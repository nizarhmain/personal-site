{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-content-pages-about-index-mdx-594098aaf738705eafbc.js","mappings":"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","sources":["webpack://minimal-blog/./content/common/component.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/pages/about/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// const fullString: string = `\n// Hi there!\n// I'm Nizar Hmain, a software engineer\n// currently based in Copenhagen (DK)\n// `;\n//\n//\nconst MyComponent = (props: { input: string }) => {\n  const [stuff, setStuff] = useState<string>(\"\");\n  const { input: fullString } = props;\n\n  useEffect(() => {\n    let counter = 0;\n\n    const interval = setInterval(() => {\n      if (counter < fullString?.length) {\n        // type more stuff\n        counter++;\n        setStuff(() => `${fullString?.substring(0, counter)}_`);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div>\n      <p style={{ fontSize: \"1.5em\", fontFamily: \"monospace\" }}>{stuff}</p>\n    </div>\n  );\n};\n\nexport default MyComponent;\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport MyComponent from '../../common/component.tsx';\nfunction _createMdxContent(props) {\n  return React.createElement(MyComponent, {\n    input: `\nHi there!\nI'm Nizar Hmain, a software engineer\ncurrently based in Copenhagen ðŸ‡©ðŸ‡°\nYou can contact me here: hmainnizar@gmail.com\n`\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/nizarhmain/software/personal-site/content/pages/about/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"3297325238\";\n"],"names":["props","stuff","setStuff","useState","input","fullString","useEffect","counter","interval","setInterval","length","substring","clearInterval","React","style","fontSize","fontFamily","_ref","title","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","MyComponent","wrapper","MDXLayout","Object","assign","_provideComponents","components","data","page","jsx","Layout","Heading","as","variant","sx","my","Head","_ref2","Seo","excerpt","MinimalBlogCorePage","Page","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}